import * as am4core from '@amcharts/amcharts4/core';
import * as am4charts from '@amcharts/amcharts4/charts';
export function multiLineGraph(id, entries) {
    let chart = am4core.create(id, am4charts.XYChart);
    chart.paddingLeft = 0;
    // Add data
    chart.data = entries;
    chart.data.sort((a, b) => {
        if (new Date(a.date) < new Date(b.date))
            return -1;
        if (new Date(a.date) > new Date(b.date))
            return 1;
        return 0;
    });
    // Create axes
    let dateAxis = chart.xAxes.push(new am4charts.DateAxis());
    dateAxis.fontSize = 10;
    dateAxis.minZoomCount = 5;
    dateAxis.renderer.grid.template.location = 0;
    dateAxis.renderer.minGridDistance = 45;
    dateAxis.dateFormats.setKey('day', 'dd MMM');
    // Create value axis
    let valueAxis = chart.yAxes.push(new am4charts.ValueAxis());
    valueAxis.fontSize = 10;
    // Create Series function
    function createSeries(field) {
        var lineSeries = chart.series.push(new am4charts.LineSeries());
        lineSeries.dataFields.valueY = `${field}`;
        lineSeries.dataFields.dateX = 'date';
        lineSeries.fontSize = 10;
        lineSeries.strokeWidth = 1;
        // lineSeries.strokeDasharray = "";
        lineSeries.name = `${field}`;
        // lineSeries.tensionX = 0.77;
        lineSeries.tooltipText = `${field}: {valueY} inch(es)`;
        lineSeries.tooltip.fontSize = 12;
        var bullet = lineSeries.bullets.push(new am4charts.CircleBullet());
        // bullet.disabled = true;
        // bullet.propertyFields.disabled = "disabled";
        bullet.circle.strokeWidth = 0;
        bullet.circle.radius = 2;
        bullet.circle.fill = am4core.color('#6270DD');
        return lineSeries;
    }
    var arm = createSeries('arm');
    var chest = createSeries('chest');
    var stomach = createSeries('stomach');
    var thigh = createSeries('thigh');
    var waist = createSeries('waist');
    var hips = createSeries('hips');
    chart.cursor = new am4charts.XYCursor();
    chart.cursor.behavior = 'none';
    chart.cursor.xAxis = dateAxis;
    chart.cursor.snapToSeries = [arm, chest, waist, stomach, thigh, hips];
    chart.legend = new am4charts.Legend();
    chart.legend.position = 'bottom';
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibXVsdGktbGluZS1ncmFwaC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uL3Byb2plY3RzL25neC1maXRlbG8vc3JjL2xpYi9hbmFseXNpcy1ncmFwaC9oZWxwZXJzL211bHRpLWxpbmUtZ3JhcGgudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxLQUFLLE9BQU8sTUFBTSwwQkFBMEIsQ0FBQztBQUNwRCxPQUFPLEtBQUssU0FBUyxNQUFNLDRCQUE0QixDQUFDO0FBRXhELE1BQU0sVUFBVSxjQUFjLENBQUMsRUFBRSxFQUFFLE9BQU87SUFDeEMsSUFBSSxLQUFLLEdBQUcsT0FBTyxDQUFDLE1BQU0sQ0FBQyxFQUFFLEVBQUUsU0FBUyxDQUFDLE9BQU8sQ0FBQyxDQUFDO0lBQ2xELEtBQUssQ0FBQyxXQUFXLEdBQUcsQ0FBQyxDQUFDO0lBRXRCLFdBQVc7SUFDWCxLQUFLLENBQUMsSUFBSSxHQUFHLE9BQU8sQ0FBQztJQUVyQixLQUFLLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLEVBQUUsRUFBRTtRQUN2QixJQUFJLElBQUksSUFBSSxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsR0FBRyxJQUFJLElBQUksQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDO1lBQUUsT0FBTyxDQUFDLENBQUMsQ0FBQztRQUNuRCxJQUFJLElBQUksSUFBSSxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsR0FBRyxJQUFJLElBQUksQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDO1lBQUUsT0FBTyxDQUFDLENBQUM7UUFDbEQsT0FBTyxDQUFDLENBQUM7SUFDWCxDQUFDLENBQUMsQ0FBQztJQUVILGNBQWM7SUFDZCxJQUFJLFFBQVEsR0FBRyxLQUFLLENBQUMsS0FBSyxDQUFDLElBQUksQ0FBQyxJQUFJLFNBQVMsQ0FBQyxRQUFRLEVBQUUsQ0FBQyxDQUFDO0lBQzFELFFBQVEsQ0FBQyxRQUFRLEdB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YXMgYW00Y29yZSBmcm9tICdAYW1jaGFydHMvYW1jaGFydHM0L2NvcmUnO1xuaW1wb3J0ICogYXMgYW00Y2hhcnRzIGZyb20gJ0BhbWNoYXJ0cy9hbWNoYXJ0czQvY2hhcnRzJztcblxuZXhwb3J0IGZ1bmN0aW9uIG11bHRpTGluZUdyYXBoKGlkLCBlbnRyaWVzKSB7XG4gIGxldCBjaGFydCA9IGFtNGNvcmUuY3JlYXRlKGlkLCBhbTRjaGFydHMuWFlDaGFydCk7XG4gIGNoYXJ0LnBhZGRpbmdMZWZ0ID0gMDtcblxuICAvLyBBZGQgZGF0YVxuICBjaGFydC5kYXRhID0gZW50cmllcztcblxuICBjaGFydC5kYXRhLnNvcnQoKGEsIGIpID0+IHtcbiAgICBpZiAobmV3IERhdGUoYS5kYXRlKSA8IG5ldyBEYXRlKGIuZGF0ZSkpIHJldHVybiAtMTtcbiAgICBpZiAobmV3IERhdGUoYS5kYXRlKSA+IG5ldyBEYXRlKGIuZGF0ZSkpIHJldHVybiAxO1xuICAgIHJldHVybiAwO1xuICB9KTtcblxuICAvLyBDcmVhdGUgYXhlc1xuICBsZXQgZGF0ZUF4aXMgPSBjaGFydC54QXhlcy5wdXNoKG5ldyBhbTRjaGFydHMuRGF0ZUF4aXMoKSk7XG4gIGRhdGVBeGlzLmZvbnRTaXplID0gMTA7XG4gIGRhdGVBeGlzLm1pblpvb21Db3VudCA9IDU7XG4gIGRhdGVBeGlzLnJlbmRlcmVyLmdyaWQudGVtcGxhdGUubG9jYXRpb24gPSAwO1xuICBkYXRlQXhpcy5yZW5kZXJlci5taW5HcmlkRGlzdGFuY2UgPSA0NTtcbiAgZGF0ZUF4aXMuZGF0ZUZvcm1hdHMuc2V0S2V5KCdkYXknLCAnZGQgTU1NJyk7XG5cbiAgLy8gQ3JlYXRlIHZhbHVlIGF4aXNcbiAgbGV0IHZhbHVlQXhpcyA9IGNoYXJ0LnlBeGVzLnB1c2gobmV3IGFtNGNoYXJ0cy5WYWx1ZUF4aXMoKSk7XG4gIHZhbHVlQXhpcy5mb250U2l6ZSA9IDEwO1xuXG4gIC8vIENyZWF0ZSBTZXJpZXMgZnVuY3Rpb25cbiAgZnVuY3Rpb24gY3JlYXRlU2VyaWVzKGZpZWxkKSB7XG4gICAgdmFyIGxpbmVTZXJpZXM6IGFueSA9IGNoYXJ0LnNlcmllcy5wdXNoKG5ldyBhbTRjaGFydHMuTGluZVNlcmllcygpKTtcbiAgICBsaW5lU2VyaWVzLmRhdGFGaWVsZHMudmFsdWVZID0gYCR7ZmllbGR9YDtcbiAgICBsaW5lU2VyaWVzLmRhdGFGaWVsZHMuZGF0ZVggPSAnZGF0ZSc7XG4gICAgbGluZVNlcmllcy5mb250U2l6ZSA9IDEwO1xuICAgIGxpbmVTZXJpZXMuc3Ryb2tlV2lkdGggPSAxO1xuICAgIC8vIGxpbmVTZXJpZXMuc3Ryb2tlRGFzaGFycmF5ID0gXCJcIjtcbiAgICBsaW5lU2VyaWVzLm5hbWUgPSBgJHtmaWVsZH1gO1xuICAgIC8vIGxpbmVTZXJpZXMudGVuc2lvblggPSAwLjc3O1xuXG4gICAgbGluZVNlcmllcy50b29sdGlwVGV4dCA9IGAke2ZpZWxkfToge3ZhbHVlWX0gaW5jaChlcylgO1xuICAgIGxpbmVTZXJpZXMudG9vbHRpcC5mb250U2l6ZSA9IDEyO1xuXG4gICAgdmFyIGJ1bGxldCA9IGxpbmVTZXJpZXMuYnVsbGV0cy5wdXNoKG5ldyBhbTRjaGFydHMuQ2lyY2xlQnVsbGV0KCkpO1xuICAgIC8vIGJ1bGxldC5kaXNhYmxlZCA9IHRydWU7XG4gICAgLy8gYnVsbGV0LnByb3BlcnR5RmllbGRzLmRpc2FibGVkID0gXCJkaXNhYmxlZFwiO1xuICAgIGJ1bGxldC5jaXJjbGUuc3Ryb2tlV2lkdGggPSAwO1xuICAgIGJ1bGxldC5jaXJjbGUucmFkaXVzID0gMjtcbiAgICBidWxsZXQuY2lyY2xlLmZpbGwgPSBhbTRjb3JlLmNvbG9yKCcjNjI3MEREJyk7XG5cbiAgICByZXR1cm4gbGluZVNlcmllcztcbiAgfVxuXG4gIHZhciBhcm0gPSBjcmVhdGVTZXJpZXMoJ2FybScpO1xuXG4gIHZhciBjaGVzdCA9IGNyZWF0ZVNlcmllcygnY2hlc3QnKTtcblxuICB2YXIgc3RvbWFjaCA9IGNyZWF0ZVNlcmllcygnc3RvbWFjaCcpO1xuXG4gIHZhciB0aGlnaCA9IGNyZWF0ZVNlcmllcygndGhpZ2gnKTtcblxuICB2YXIgd2Fpc3QgPSBjcmVhdGVTZXJpZXMoJ3dhaXN0Jyk7XG5cbiAgdmFyIGhpcHMgPSBjcmVhdGVTZXJpZXMoJ2hpcHMnKTtcblxuICBjaGFydC5jdXJzb3IgPSBuZXcgYW00Y2hhcnRzLlhZQ3Vyc29yKCk7XG4gIGNoYXJ0LmN1cnNvci5iZWhhdmlvciA9ICdub25lJztcbiAgY2hhcnQuY3Vyc29yLnhBeGlzID0gZGF0ZUF4aXM7XG4gIGNoYXJ0LmN1cnNvci5zbmFwVG9TZXJpZXMgPSBbYXJtLCBjaGVzdCwgd2Fpc3QsIHN0b21hY2gsIHRoaWdoLCBoaXBzXTtcblxuICBjaGFydC5sZWdlbmQgPSBuZXcgYW00Y2hhcnRzLkxlZ2VuZCgpO1xuICBjaGFydC5sZWdlbmQucG9zaXRpb24gPSAnYm90dG9tJztcbn1cbiJdfQ==